-- File: Happy.txt
-- Description: lanscii language basic parser
-- Authors:
--     Manuel Pacheco - 10-10524
--     Nicolas Ma√±an - 06-39883
{
module Hap where

import AST
import Alex
}

%name happyParser
%tokentype { Token }
%error { parseError }

%token

  -- Constants
  true  { Token TRUE }
  false { Token FALSE }
  int  { Token NUMBER }
  '#'    { Token CANVAS }
  '<\>'  { canToken "\\" }
  '<|>'  { canToken "|" }
  '</>'  { canToken "/" }
  '<->'  { canToken "-" }
  '<_>'  { canToken "_" }
  '< >'  { canToken " " }

  -- Reserved Words
  read  { Token READ }
  write { Token WRITE }

  -- Type Symbols
  '%' { Token PERCENT }
  '!' { Token EXCLAMATIONMARK }
  '@' { Token AT }

  -- Common Operators
  '='   { Token EQUALS ap $$ }
  ':'   { Token COLON ap $$ }
  ';'   { Token SEMICOLON ap $$ }
  '?'   { Token QUESTIONMARK ap $$ }
  '('   { Token LPARENTHESIS ap $$ }
  ')'   { Token RPARENTHESIS ap $$ }
  '['   { Token LBRACKET ap $$ }
  ']'   { Token RBRACKET ap $$ }
  '..'  { Token RANGE ap $$ }

  -- Boolean Operators
  '\/'  { Token LOG_OR ap $$ }
  '/\'  { Token LOG_AND ap $$ }
  '^'   { Token LOG_NEG ap $$ }

  -- Relational Operators
  '<='  { Token REL_LE ap $$ }
  '>='  { Token REL_GE ap $$ }
  '/='  { Token REL_NE ap $$ }
  '<'   { Token REL_LT ap $$ }
  '>'   { Token REL_GT ap $$ }

  -- Arithmetic Operators
  '+' { Token PLUS ap $$ }
  '-' { Token MINUS ap $$ }
  '*' { Token ASTERISK ap $$ }
  '/' { Token SLASH ap $$ }
  '%' { Token PERCENT ap $$ }

  -- Canvas Operators
  '~' { Token LINKING ap $$ }
  '&' { Token AMPERSAND ap $$ }
  '$' { Token DOLLAR ap $$ }
  ''' { Token APOSTROPHE ap $$ }

  -- Normal Symbols
  identifier { Token IDENTIFIER ap $$ }

%%

BEGIN -> STATEMENT

STATEMENT -> '{' DECLARE_LIST '|' STATEMENT_LIST '}'
  | '{' STATEMENT_LIST '}'
  | identifier '=' EXPRESSION
  | read identifier
  | write identifier

  | '(' EXPRESSION '?' STATEMENT_LIST ')'
  | '(' EXPRESSION '?' STATEMENT_LIST ':' STATEMENT_LIST ')'

  | '[' EXPRESSION '|' STATEMENT_LIST '}'
  | '[' EXPRESSION '..' EXPRESSION '|' STATEMENT_LIST ']'
  | '[' TokenIdentifier ':' EXPRESSION '..' EXPRESSION '|' STATEMENT_LIST ']'

STATEMENT_LIST -> STATEMENT
  | STATEMENT_LIST ';' STATEMENT

DECLARE_LIST -> DATA_TYPE DECLARE_ID
  | DECLARE_LIST DATA_TYPE DECLARE_ID

DATA_TYPE -> '%'
  | '@'
  | '!'

DECLARE_ID -> identifier
  | DECLARE_ID identifier

EXPRESSION ->
  | true
  | false
  | identifier
  | '#'
  | '<\>'
  | '<|>'
  | '</>'
  | '<->'
  | '<_>'
  | '< >'
  | '(' EXPRESSION ')'

  -- Arithmetic Operators
  | EXPRESSION '+' EXPRESSION
  | EXPRESSION '-' EXPRESSION
  | EXPRESSION '*' EXPRESSION
  | EXPRESSION '/' EXPRESSION
  | EXPRESSION '%' EXPRESSION

  -- Unary Arithmetic Operator
  | '-' EXPRESSION

  -- Canvas Operators
  | EXPRESSION '~' EXPRESSION
  | EXPRESSION '&' EXPRESSION

  -- Unary Canvas Operator
  | '$' EXPRESSION
  | EXPRESSION '''

  -- Relational Operators
  | EXPRESSION '<=' EXPRESSION
  | EXPRESSION '>=' EXPRESSION
  | EXPRESSION '/=' EXPRESSION
  | EXPRESSION '<' EXPRESSION
  | EXPRESSION '>' EXPRESSION
  | EXPRESSION '=' EXPRESSION

  -- Boolean Operators
  | EXPRESSION '\/' EXPRESSION
  | EXPRESSION '/\' EXPRESSION

  -- Unary Boolean Operator
  | EXPRESSION '^'
